From ab9d94206b49f4f9cf0fe4ce11b32ee2cbbcf0ae Mon Sep 17 00:00:00 2001
From: "Mauro (mdrjr) Ribeiro" <mauro.ribeiro@hardkernel.com>
Date: Tue, 24 May 2016 13:27:05 +0900
Subject: [PATCH] osd: add extra color configurations

Change-Id: I1b5822420e73548f8a0ecee7cc42d5b146dcf11c
---
 drivers/amlogic/display/osd/osd_fb.c | 55 +++++++++++++++++++++++++++++++-----
 drivers/amlogic/display/osd/osd_hw.c | 26 +++++++++++++++++
 include/linux/amlogic/vout/color.h   |  5 ++++
 3 files changed, 79 insertions(+), 7 deletions(-)

diff --git a/drivers/amlogic/display/osd/osd_fb.c b/drivers/amlogic/display/osd/osd_fb.c
index 4f58856..ba38d401 100644
--- a/drivers/amlogic/display/osd/osd_fb.c
+++ b/drivers/amlogic/display/osd/osd_fb.c
@@ -157,10 +157,26 @@ const struct color_bit_define_s default_color_format_array[] = {
 		FB_VISUAL_TRUECOLOR, 24
 	},
 	/*32 bit color*/
-	INVALID_BPP_ITEM,
-	INVALID_BPP_ITEM,
-	INVALID_BPP_ITEM,
-	INVALID_BPP_ITEM,
+	{
+		COLOR_INDEX_32_BGRX, 3, 5,
+		8, 8, 0, 16, 8, 0, 24, 8, 0, 0, 0, 0,
+		FB_VISUAL_TRUECOLOR, 32
+	},
+	{
+		COLOR_INDEX_32_XBGR, 2, 5,
+		0, 8, 0, 8, 8, 0, 16, 8, 0, 24, 0, 0,
+		FB_VISUAL_TRUECOLOR, 32
+	},
+	{
+		COLOR_INDEX_32_RGBX, 0, 5,
+		24, 8, 0, 16, 8, 0, 8, 8, 0, 0, 0, 0,
+		FB_VISUAL_TRUECOLOR, 32
+	},
+	{
+		COLOR_INDEX_32_XRGB, 1, 5,
+		16, 8, 0, 8, 8, 0, 0, 8, 0, 24, 0, 0,
+		FB_VISUAL_TRUECOLOR, 32
+	},
 	{
 		COLOR_INDEX_32_BGRA, 3, 5,
 		8, 8, 0, 16, 8, 0, 24, 8, 0, 0, 8, 0,
@@ -526,8 +542,15 @@ _find_color_format(struct fb_var_screeninfo *var)
 		lower_margin = COLOR_INDEX_24_6666_A;
 		break;
 	case 3:
-		upper_margin = COLOR_INDEX_32_ARGB;
-		lower_margin = COLOR_INDEX_32_BGRA;
+		if ((var->nonstd != 0)
+		    && (var->transp.length == 0)) {
+			/* RGBX Mode */
+			upper_margin = COLOR_INDEX_32_XRGB;
+			lower_margin = COLOR_INDEX_32_BGRX;
+		} else {
+			upper_margin = COLOR_INDEX_32_ARGB;
+			lower_margin = COLOR_INDEX_32_BGRA;
+		}
 		break;
 	case 4:
 		upper_margin = COLOR_INDEX_YUV_422;
@@ -541,7 +564,25 @@ _find_color_format(struct fb_var_screeninfo *var)
 	 * if not provide color component length
 	 * then we find the first depth match.
 	 */
-	if ((var->red.length == 0) || (var->green.length == 0)
+
+	if ((var->nonstd != 0) && (level == 3)
+	    && (var->transp.length == 0)) {
+		/* RGBX Mode */
+		for (i = upper_margin; i >= lower_margin; i--) {
+			color = &default_color_format_array[i];
+			if ((color->red_length == var->red.length) &&
+			    (color->green_length == var->green.length) &&
+			    (color->blue_length == var->blue.length) &&
+			    (color->transp_offset == var->transp.offset) &&
+			    (color->green_offset == var->green.offset) &&
+			    (color->blue_offset == var->blue.offset) &&
+			    (color->red_offset == var->red.offset)) {
+				found = color;
+				break;
+			}
+			color--;
+		}
+	} else if ((var->red.length == 0) || (var->green.length == 0)
 	    || (var->blue.length == 0) ||
 	    var->bits_per_pixel != (var->red.length + var->green.length +
 		    var->blue.length + var->transp.length)) {
diff --git a/drivers/amlogic/display/osd/osd_hw.c b/drivers/amlogic/display/osd/osd_hw.c
index c7b5557..3fd7d6e 100644
--- a/drivers/amlogic/display/osd/osd_hw.c
+++ b/drivers/amlogic/display/osd/osd_hw.c
@@ -2071,6 +2071,19 @@ static   void  osd1_update_color_mode(void)
 		VSYNCOSD_WR_MPEG_REG(VIU_OSD1_BLK2_CFG_W0, data32);
 		VSYNCOSD_WR_MPEG_REG(VIU_OSD1_BLK3_CFG_W0, data32);
 	}
+		if (get_cpu_type() >= MESON_CPU_MAJOR_ID_GXBB) {
+			enum color_index_e idx =
+				osd_hw.color_info[OSD1]->color_index;
+			if (idx >= COLOR_INDEX_32_BGRX
+			    && idx <= COLOR_INDEX_32_XRGB)
+				VSYNCOSD_WR_MPEG_REG_BITS(
+					VIU_OSD1_CTRL_STAT2,
+					0x1ff, 6, 9);
+			else
+				VSYNCOSD_WR_MPEG_REG_BITS(
+					VIU_OSD1_CTRL_STAT2,
+					0, 6, 9);
+		}
 	remove_from_update_list(OSD1, OSD_COLOR_MODE);
 }
 static void osd2_update_color_mode(void)
@@ -2090,6 +2103,19 @@ static void osd2_update_color_mode(void)
 		/* osd_blk_mode */
 		data32 |=  osd_hw.color_info[OSD2]->hw_blkmode << 8;
 		VSYNCOSD_WR_MPEG_REG(VIU_OSD2_BLK0_CFG_W0, data32);
+		if (get_cpu_type() >= MESON_CPU_MAJOR_ID_GXBB) {
+			enum color_index_e idx =
+				osd_hw.color_info[OSD2]->color_index;
+			if (idx >= COLOR_INDEX_32_BGRX
+			    && idx <= COLOR_INDEX_32_XRGB)
+				VSYNCOSD_WR_MPEG_REG_BITS(
+					VIU_OSD2_CTRL_STAT2,
+					0x1ff, 6, 9);
+			else
+				VSYNCOSD_WR_MPEG_REG_BITS(
+					VIU_OSD2_CTRL_STAT2,
+					0, 6, 9);
+		}
 	}
 	remove_from_update_list(OSD2, OSD_COLOR_MODE);
 }
diff --git a/include/linux/amlogic/vout/color.h b/include/linux/amlogic/vout/color.h
index 1e60bfb..b6e4512 100644
--- a/include/linux/amlogic/vout/color.h
+++ b/include/linux/amlogic/vout/color.h
@@ -39,6 +39,11 @@ enum color_index_e {
 	COLOR_INDEX_24_888_B = 23,
 	COLOR_INDEX_24_RGB = 24,
 
+	COLOR_INDEX_32_BGRX = 25,
+	COLOR_INDEX_32_XBGR = 26,
+	COLOR_INDEX_32_RGBX = 27,
+	COLOR_INDEX_32_XRGB = 28,
+
 	COLOR_INDEX_32_BGRA = 29,
 	COLOR_INDEX_32_ABGR = 30,
 	COLOR_INDEX_32_RGBA = 31,
